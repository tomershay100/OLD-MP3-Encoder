import numpy as np

FFT_SIZE = 512
N_SUBBANDS = 32
SHIFT_SIZE = 32
SLOT_SIZE = 32
FRAMES_PER_BLOCK = 12

EPS = 1e-6
INF = 123456

D1a = [[1, 1, 0.617, 33.44],
       [2, 2, 1.232, 19.20],
       [3, 3, 1.842, 13.87],
       [4, 4, 2.445, 11.01],
       [5, 5, 3.037, 9.20],
       [6, 6, 3.618, 7.94],
       [7, 7, 4.185, 7.00],
       [8, 8, 4.736, 6.28],
       [9, 9, 5.272, 5.70],
       [10, 10, 5.789, 5.21],
       [11, 11, 6.289, 4.80],
       [12, 12, 6.770, 4.45],
       [13, 13, 7.233, 4.14],
       [14, 14, 7.677, 3.86],
       [15, 15, 8.103, 3.61],
       [16, 16, 8.511, 3.37],
       [17, 17, 8.901, 3.15],
       [18, 18, 9.275, 2.93],
       [19, 19, 9.632, 2.73],
       [20, 20, 9.974, 2.53],
       [21, 21, 10.301, 2.32],
       [22, 22, 10.614, 2.12],
       [23, 23, 10.913, 1.92],
       [24, 24, 11.199, 1.71],
       [25, 25, 11.474, 1.49],
       [26, 26, 11.736, 1.27],
       [27, 27, 11.988, 1.04],
       [28, 28, 12.230, 0.80],
       [29, 29, 12.461, 0.55],
       [30, 30, 12.684, 0.29],
       [31, 31, 12.898, 0.02],
       [32, 32, 13.104, -0.25],
       [33, 33, 13.302, -0.54],
       [34, 34, 13.493, -0.83],
       [35, 35, 13.678, -1.12],
       [36, 36, 13.855, -1.43],
       [37, 37, 14.027, -1.73],
       [38, 38, 14.193, -2.04],
       [39, 39, 14.354, -2.34],
       [40, 40, 14.509, -2.64],
       [41, 41, 14.660, -2.93],
       [42, 42, 14.807, -3.22],
       [43, 43, 14.949, -3.49],
       [44, 44, 15.087, -3.74],
       [45, 45, 15.221, -3.98],
       [46, 46, 15.351, -4.20],
       [47, 47, 15.478, -4.40],
       [48, 48, 15.602, -4.57],
       [49, 50, 15.841, -4.82],
       [50, 52, 16.069, -4.96],
       [51, 54, 16.287, -4.97],
       [52, 56, 16.496, -4.86],
       [53, 58, 16.697, -4.63],
       [54, 60, 16.891, -4.29],
       [55, 62, 17.078, -3.87],
       [56, 64, 17.259, -3.39],
       [57, 66, 17.434, -2.86],
       [58, 68, 17.605, -2.31],
       [59, 70, 17.770, -1.77],
       [60, 72, 17.932, -1.24],
       [61, 74, 18.089, -0.74],
       [62, 76, 18.242, -0.29],
       [63, 78, 18.392, 0.12],
       [64, 80, 18.539, 0.48],
       [65, 82, 18.682, 0.79],
       [66, 84, 18.823, 1.06],
       [67, 86, 18.960, 1.29],
       [68, 88, 19.095, 1.49],
       [69, 90, 19.226, 1.66],
       [70, 92, 19.356, 1.81],
       [71, 94, 19.482, 1.95],
       [72, 96, 19.606, 2.08],
       [73, 100, 19.847, 2.33],
       [74, 104, 20.079, 2.59],
       [75, 108, 20.300, 2.86],
       [76, 112, 20.513, 3.17],
       [77, 116, 20.717, 3.51],
       [78, 120, 20.912, 3.89],
       [79, 124, 21.098, 4.31],
       [80, 128, 21.275, 4.79],
       [81, 132, 21.445, 5.31],
       [82, 136, 21.606, 5.88],
       [83, 140, 21.760, 6.50],
       [84, 144, 21.906, 7.19],
       [85, 148, 22.046, 7.93],
       [86, 152, 22.178, 8.75],
       [87, 156, 22.304, 9.63],
       [88, 160, 22.424, 10.58],
       [89, 164, 22.538, 11.60],
       [90, 168, 22.646, 12.71],
       [91, 172, 22.749, 13.90],
       [92, 176, 22.847, 15.18],
       [93, 180, 22.941, 16.54],
       [94, 184, 23.030, 18.01],
       [95, 188, 23.114, 19.57],
       [96, 192, 23.195, 21.23],
       [97, 196, 23.272, 23.01],
       [98, 200, 23.345, 24.90],
       [99, 204, 23.415, 26.90],
       [100, 208, 23.482, 29.03],
       [101, 212, 23.546, 31.28],
       [102, 216, 23.607, 33.67],
       [103, 220, 23.666, 36.19],
       [104, 224, 23.722, 38.86],
       [105, 228, 23.775, 41.67],
       [106, 232, 23.827, 44.63],
       [107, 236, 23.876, 47.76],
       [108, 240, 23.923, 51.04]]
D1b = [[1, 1, 0.850, 25.87],
       [2, 2, 1.694, 14.85],
       [3, 3, 2.525, 10.72],
       [4, 4, 3.337, 8.50],
       [5, 5, 4.124, 7.10],
       [6, 6, 4.882, 6.11],
       [7, 7, 5.608, 5.37],
       [8, 8, 6.301, 4.79],
       [9, 9, 6.959, 4.32],
       [10, 10, 7.581, 3.92],
       [11, 11, 8.169, 3.57],
       [12, 12, 8.723, 3.25],
       [13, 13, 9.244, 2.95],
       [14, 14, 9.734, 2.67],
       [15, 15, 10.195, 2.39],
       [16, 16, 10.629, 2.11],
       [17, 17, 11.037, 1.83],
       [18, 18, 11.421, 1.53],
       [19, 19, 11.783, 1.23],
       [20, 20, 12.125, 0.90],
       [21, 21, 12.448, 0.56],
       [22, 22, 12.753, 0.21],
       [23, 23, 13.042, -0.17],
       [24, 24, 13.317, -0.56],
       [25, 25, 13.577, -0.96],
       [26, 26, 13.825, -1.37],
       [27, 27, 14.062, -1.79],
       [28, 28, 14.288, -2.21],
       [29, 29, 14.504, -2.63],
       [30, 30, 14.711, -3.03],
       [31, 31, 14.909, -3.41],
       [32, 32, 15.100, -3.77],
       [33, 33, 15.283, -4.09],
       [34, 34, 15.460, -4.37],
       [35, 35, 15.631, -4.60],
       [36, 36, 15.795, -4.78],
       [37, 37, 15.955, -4.91],
       [38, 38, 16.110, -4.97],
       [39, 39, 16.260, -4.98],
       [40, 40, 16.405, -4.92],
       [41, 41, 16.547, -4.81],
       [42, 42, 16.685, -4.65],
       [43, 43, 16.820, -4.43],
       [44, 44, 16.951, -4.17],
       [45, 45, 17.079, -3.87],
       [46, 46, 17.204, -3.54],
       [47, 47, 17.327, -3.19],
       [48, 48, 17.447, -2.82],
       [49, 50, 17.680, -2.06],
       [50, 52, 17.904, -1.33],
       [51, 54, 18.121, -0.64],
       [52, 56, 18.331, -0.04],
       [53, 58, 18.534, 0.47],
       [54, 60, 18.730, 0.89],
       [55, 62, 18.922, 1.23],
       [56, 64, 19.108, 1.51],
       [57, 66, 19.288, 1.74],
       [58, 68, 19.464, 1.93],
       [59, 70, 19.635, 2.11],
       [60, 72, 19.801, 2.28],
       [61, 74, 19.963, 2.45],
       [62, 76, 20.120, 2.63],
       [63, 78, 20.273, 2.82],
       [64, 80, 20.421, 3.03],
       [65, 82, 20.565, 3.25],
       [66, 84, 20.705, 3.49],
       [67, 86, 20.840, 3.74],
       [68, 88, 20.971, 4.02],
       [69, 90, 21.099, 4.32],
       [70, 92, 21.222, 4.64],
       [71, 94, 21.341, 4.98],
       [72, 96, 21.457, 5.35],
       [73, 100, 21.676, 6.15],
       [74, 104, 21.882, 7.07],
       [75, 108, 22.074, 8.10],
       [76, 112, 22.253, 9.25],
       [77, 116, 22.420, 10.54],
       [78, 120, 22.575, 11.97],
       [79, 124, 22.721, 13.56],
       [80, 128, 22.857, 15.30],
       [81, 132, 22.984, 17.23],
       [82, 136, 23.102, 19.33],
       [83, 140, 23.213, 21.64],
       [84, 144, 23.317, 24.15],
       [85, 148, 23.414, 26.88],
       [86, 152, 23.506, 29.84],
       [87, 156, 23.592, 33.04],
       [88, 160, 23.673, 36.51],
       [89, 164, 23.749, 40.24],
       [90, 168, 23.821, 44.26],
       [91, 172, 23.888, 48.58],
       [92, 176, 23.952, 53.21],
       [93, 180, 24.013, 58.17],
       [94, 184, 24.070, 63.48],
       [95, 188, 24.124, 69.13],
       [96, 192, 24.176, 69.13],
       [97, 196, 24.225, 69.13],
       [98, 200, 24.271, 69.13],
       [99, 204, 24.316, 69.13],
       [100, 208, 24.358, 69.13],
       [101, 212, 24.398, 69.13],
       [102, 216, 24.436, 69.13],
       [103, 220, 24.473, 69.13],
       [104, 224, 24.508, 69.13],
       [105, 228, 24.541, 69.13],
       [106, 232, 24.573, 69.13]]
D1c = [[1, 1, 0.925, 24.17],
       [2, 2, 1.842, 13.87],
       [3, 3, 2.742, 10.01],
       [4, 4, 3.618, 7.94],
       [5, 5, 4.463, 6.62],
       [6, 6, 5.272, 5.70],
       [7, 7, 6.041, 5.00],
       [8, 8, 6.770, 4.45],
       [9, 9, 7.457, 4.00],
       [10, 10, 8.103, 3.61],
       [11, 11, 8.708, 3.26],
       [12, 12, 9.275, 2.93],
       [13, 13, 9.805, 2.63],
       [14, 14, 10.301, 2.32],
       [15, 15, 10.765, 2.02],
       [16, 16, 11.199, 1.71],
       [17, 17, 11.606, 1.38],
       [18, 18, 11.988, 1.04],
       [19, 19, 12.347, 0.67],
       [20, 20, 12.684, 0.29],
       [21, 21, 13.002, -0.11],
       [22, 22, 13.302, -0.54],
       [23, 23, 13.586, -0.97],
       [24, 24, 13.855, -1.43],
       [25, 25, 14.111, -1.88],
       [26, 26, 14.354, -2.34],
       [27, 27, 14.585, -2.79],
       [28, 28, 14.807, -3.22],
       [29, 29, 15.018, -3.62],
       [30, 30, 15.221, -3.98],
       [31, 31, 15.415, -4.30],
       [32, 32, 15.602, -4.57],
       [33, 33, 15.783, -4.77],
       [34, 34, 15.956, -4.91],
       [35, 35, 16.124, -4.98],
       [36, 36, 16.287, -4.97],
       [37, 37, 16.445, -4.90],
       [38, 38, 16.598, -4.76],
       [39, 39, 16.746, -4.55],
       [40, 40, 16.891, -4.29],
       [41, 41, 17.032, -3.99],
       [42, 42, 17.169, -3.64],
       [43, 43, 17.303, -3.26],
       [44, 44, 17.434, -2.86],
       [45, 45, 17.563, -2.45],
       [46, 46, 17.688, -2.04],
       [47, 47, 17.811, -1.63],
       [48, 48, 17.932, -1.24],
       [49, 50, 18.166, -0.51],
       [50, 52, 18.392, 0.12],
       [51, 54, 18.611, 0.64],
       [52, 56, 18.823, 1.06],
       [53, 58, 19.028, 1.39],
       [54, 60, 19.226, 1.66],
       [55, 62, 19.419, 1.88],
       [56, 64, 19.606, 2.08],
       [57, 66, 19.788, 2.27],
       [58, 68, 19.964, 2.46],
       [59, 70, 20.135, 2.65],
       [60, 72, 20.300, 2.86],
       [61, 74, 20.461, 3.09],
       [62, 76, 20.616, 3.33],
       [63, 78, 20.766, 3.60],
       [64, 80, 20.912, 3.89],
       [65, 82, 21.052, 4.20],
       [66, 84, 21.188, 4.54],
       [67, 86, 21.318, 4.91],
       [68, 88, 21.445, 5.31],
       [69, 90, 21.567, 5.73],
       [70, 92, 21.684, 6.18],
       [71, 94, 21.797, 6.67],
       [72, 96, 21.906, 7.19],
       [73, 100, 22.113, 8.33],
       [74, 104, 22.304, 9.63],
       [75, 108, 22.482, 11.08],
       [76, 112, 22.646, 12.71],
       [77, 116, 22.799, 14.53],
       [78, 120, 22.941, 16.54],
       [79, 124, 23.072, 18.77],
       [80, 128, 23.195, 21.23],
       [81, 132, 23.309, 23.94],
       [82, 136, 23.415, 26.90],
       [83, 140, 23.515, 30.14],
       [84, 144, 23.607, 33.67],
       [85, 148, 23.694, 37.51],
       [86, 152, 23.775, 41.67],
       [87, 156, 23.852, 46.17],
       [88, 160, 23.923, 51.04],
       [89, 164, 23.991, 56.29],
       [90, 168, 24.054, 61.94],
       [91, 172, 24.114, 68.00],
       [92, 176, 24.171, 68.00],
       [93, 180, 24.224, 68.00],
       [94, 184, 24.275, 68.00],
       [95, 188, 24.322, 68.00],
       [96, 192, 24.368, 68.00],
       [97, 196, 24.411, 68.00],
       [98, 200, 24.452, 68.00],
       [99, 204, 24.491, 68.00],
       [100, 208, 24.528, 68.00],
       [101, 212, 24.564, 68.00],
       [102, 216, 24.597, 68.00]]

D2a = [[0, 1],
       [1, 2],
       [2, 4],
       [3, 5],
       [4, 7],
       [5, 9],
       [6, 11],
       [7, 13],
       [8, 15],
       [9, 18],
       [10, 21],
       [11, 24],
       [12, 28],
       [13, 32],
       [14, 37],
       [15, 44],
       [16, 51],
       [17, 61],
       [18, 73],
       [19, 87],
       [20, 101],
       [21, 121],
       [22, 145],
       [23, 181],
       [24, 241]]
D2b = [[0, 1],
       [1, 2],
       [2, 3],
       [3, 4],
       [4, 5],
       [5, 7],
       [6, 8],
       [7, 10],
       [8, 11],
       [9, 13],
       [10, 15],
       [11, 17],
       [12, 20],
       [13, 23],
       [14, 27],
       [15, 32],
       [16, 38],
       [17, 45],
       [18, 53],
       [19, 63],
       [20, 75],
       [21, 89],
       [22, 105],
       [23, 133],
       [24, 177],
       [25, 233]]
D2c = [[0, 1],
       [1, 2],
       [2, 3],
       [3, 4],
       [4, 5],
       [5, 6],
       [6, 7],
       [7, 9],
       [8, 10],
       [9, 12],
       [10, 14],
       [11, 16],
       [12, 19],
       [13, 21],
       [14, 25],
       [15, 29],
       [16, 35],
       [17, 41],
       [18, 49],
       [19, 57],
       [20, 69],
       [21, 81],
       [22, 97],
       [23, 121],
       [24, 165],
       [25, 217]]

layer1_scale_factors = [2.000000000000000000e+00,
                        1.587401032447814941e+00,
                        1.259921073913574219e+00,
                        1.000000000000000000e+00,
                        7.937005162239074707e-01,
                        6.299605369567871094e-01,
                        5.000000000000000000e-01,
                        3.968502581119537354e-01,
                        3.149802684783935547e-01,
                        2.500000000000000000e-01,
                        1.984251290559768677e-01,
                        1.574901342391967773e-01,
                        1.250000000000000000e-01,
                        9.921256452798843384e-02,
                        7.874506711959838867e-02,
                        6.250000000000000000e-02,
                        4.960628226399421692e-02,
                        3.937253355979919434e-02,
                        3.125000000000000000e-02,
                        2.480314113199710846e-02,
                        1.968626677989959717e-02,
                        1.562500000000000000e-02,
                        1.240157056599855423e-02,
                        9.843133389949798584e-03,
                        7.812500000000000000e-03,
                        6.200785282999277115e-03,
                        4.921566694974899292e-03,
                        3.906250000000000000e-03,
                        3.100392641499638557e-03,
                        2.460783347487449646e-03,
                        1.953125000000000000e-03,
                        1.550196320749819279e-03,
                        1.230391673743724823e-03,
                        9.765625000000000000e-04,
                        7.750981603749096394e-04,
                        6.151958368718624115e-04,
                        4.882812500000000000e-04,
                        3.875490801874548197e-04,
                        3.075979184359312057e-04,
                        2.441406250000000000e-04,
                        1.937745400937274098e-04,
                        1.537989592179656029e-04,
                        1.220703125000000000e-04,
                        9.688727004686370492e-05,
                        7.689947960898280144e-05,
                        6.103515625000000000e-05,
                        4.844363502343185246e-05,
                        3.844973980449140072e-05,
                        3.051757812500000000e-05,
                        2.422181751171592623e-05,
                        1.922486990224570036e-05,
                        1.525878906250000000e-05,
                        1.211090875585796311e-05,
                        9.612434951122850180e-06,
                        7.629394531250000000e-06,
                        6.055454377928981557e-06,
                        4.806217475561425090e-06,
                        3.814697265625000000e-06,
                        3.027727188964490779e-06,
                        2.403108737780712545e-06,
                        1.907348632812500000e-06,
                        1.513863594482245389e-06,
                        1.201554368890356272e-06,
                        -1.000000000000000000e+00]


# All the tables necessary for encoding, including the PsychoAcoustic model tables.
class Tables:

    # Select the table based on sampling frequency. Bitrate is needed for adjustment of minimum hearing threshold.
    def __init__(self, sample_rate, bit_rate):
        # Read ISO PsychoAcoustic model 1 tables containing critical band rates,
        # absolute thresholds and critical band boundaries
        if sample_rate == 32000:
            frequency_band = np.array(D1a, dtype='float32')
            critical_band = np.array(D2a, dtype='uint16')
        elif sample_rate == 44100:
            frequency_band = np.array(D1b, dtype='float32')
            critical_band = np.array(D2b, dtype='float32')
        else:  # sample_rate == 48000:
            frequency_band = np.array(D1c, dtype='float32')
            critical_band = np.array(D2c, dtype='float32')

        self.cbnum = critical_band[-1, 0] + 1
        self.cbound = critical_band[:, 1]

        self.subsize = frequency_band.shape[0]
        self.line = frequency_band[:, 1].astype('uint16')
        self.bark = frequency_band[:, 2]

        self.hear = frequency_band[:, 3]
        if bit_rate >= 96:
            self.hear -= 12

        self.map = np.zeros((FFT_SIZE // 2) + 1, dtype='uint16')
        for i in range(self.subsize - 1):
            for j in range(self.line[i], self.line[i + 1]):
                self.map[j] = i
        for j in range(self.line[self.subsize - 1], FFT_SIZE // 2 + 1):
            self.map[j] = self.subsize - 1

        # Signal-to-noise ratio table, needed for bit allocation in the ISO PsychoAcoustic model 1.
        self.signal_to_noise_ratio = np.array((0.00, 7.00, 16.00, 25.28, 31.59, 37.75, 43.84, 49.89, 55.93, 61.96,
                                               67.98, 74.01, 80.03, 86.05, 92.01), dtype='float32')

        # Hanning window.
        self.hanning = np.hanning(FFT_SIZE) * np.sqrt(8 / 3.0)

        # MPEG-1 Layer 1 scalefactor table.
        self.scale_factor = np.array(layer1_scale_factors, dtype='float32')

        # MPEG-1 Layer 1 quantization coefficients.
        self.qca = np.array((0.750000000, 0.875000000, 0.937500000, 0.968750000, 0.984375000, 0.992187500, 0.996093750,
                             0.998046875, 0.999023438, 0.999511719, 0.999755859, 0.999877930, 0.999938965, 0.999969482,
                             0.999984741), dtype='float32')
        self.qcb = np.array((-0.250000000, -0.125000000, -0.062500000, -0.031250000, -0.015625000, -0.007812500,
                             -0.003906250, -0.001953125, -0.000976563, -0.000488281, -0.000244141, -0.000122070,
                             -0.000061035, -0.000030518, -0.000015259), dtype='float32')
